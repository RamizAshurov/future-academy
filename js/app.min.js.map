{"version":3,"file":"app.min.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;ACNA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,yBAAyB,6BAA6B,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,iCAAiC,GAAG;AACpK;AACA;;AAEA;AACA;AACA,4CAA4C,EAAE,gBAAgB,EAAE,aAAa,EAAE,aAAa,EAAE;AAC9F;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK,IAAI,YAAY;AACrB;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,iCAAiC,MAAM,iCAAiC;AAC7H;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uEAAuE,yDAAyD;;AAEhI;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C,qCAAqC,yEAAyE;AAC9G;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,qDAAqD,qDAAqD;AAC1G,KAAK;AACL","sources":["webpack://gulp-start/webpack/bootstrap","webpack://gulp-start/webpack/runtime/make namespace object","webpack://gulp-start/./src/js/app.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const isMobile = {\n    Android: function() {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function() {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function() {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function() {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function() {\n        return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);\n    },\n    any: function() {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n}; \n\nfunction validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\n// Валидация российского номер\nfunction validateRuPhone(str) {\n    return /^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/.test(\n        str\n    );\n}\n\nconst lockPaddingElements = document.querySelector(\"header\");\n\nfunction lockBody() {\n    let paddingValue = window.innerWidth - document.documentElement.clientWidth;\n    if (lockPaddingElements && paddingValue) {\n        lockPaddingElements.style.paddingRight = paddingValue + \"px\"\n    }\n    document.body.classList.add(\"_lock\")\n}\n\nfunction unlockBody () {\n    if (lockPaddingElements) {\n        lockPaddingElements.style.paddingRight = \"\"\n    }\n    document.body.classList.remove(\"_lock\")\n}\n\nfunction openPopup(popup = undefined) {\n    if (popup) {\n        lockBody();\n        popup.classList.add(\"popup--open\")\n\n    } else {\n        console.log(\"Give me a popup\")\n    }\n}\n\nfunction closePopup(popup) {\n    popup.addEventListener(\"transitionend\", e => {\n        unlockBosdy()\n    }, { once: true })\n    popup.classList.remove(\"popup--open\")\n}\n\n\nfunction initParallaxEffect(parallax) {\n    const parallaxContainer = parallax.closest(\"[data-parallax]\")\n\n    const speed = parallaxContainer.dataset.speed || 0.05;\n\n    const parallaxItemEls = parallaxContainer.querySelectorAll(\"[data-parallax-item]\");\n\n    function moveParallaxItem(el) {\n        const distX = coordXPercent - prevPosX;\n        const distY = coordYPercent - prevPosY;\n        \n        const xOffset = el.dataset.x;\n        const yOffset = el.dataset.y;\n\n        const xDir = parseInt(el.dataset.xdir) || 1;\n        const yDir = parseInt(el.dataset.ydir) || 1;\n\n        prevPosX = prevPosX + distX * speed;\n        prevPosY = prevPosY + distY * speed;\n        \n        el.style.cssText = `transform: translate3d(${-prevPosX / 100 * xOffset * xDir}px, ${-prevPosY / 100 * yOffset * yDir}px, 0)`;\n        \n        requestAnimationFrame(() => moveParallaxItem(el))\n    }\n    \n    let prevPosX = 0, prevPosY = 0;\n    let coordXPercent = 0, coordYPercent = 0;\n\n    Array.from(parallaxItemEls).forEach(parallaxItem => {\n        \n        moveParallaxItem(parallaxItem);\n    })\n\n    // listen on parallax or parallaxContainer\n    parallax.addEventListener(\"mousemove\", e => {\n        const parallaxContainerClientRect = e.currentTarget.getBoundingClientRect();\n        const parallaxContainerWidth = parallaxContainerClientRect.width;\n        const parallaxContainerHeight = parallaxContainerClientRect.height;\n\n        const coordX = e.clientX - parallaxContainerClientRect.left - parallaxContainerWidth / 2;\n        const coordY = e.clientY - parallaxContainerClientRect.top - parallaxContainerHeight / 2;\n\n        coordXPercent = coordX / parallaxContainerWidth * 100;\n        coordYPercent = coordY / parallaxContainerHeight * 100;\n    })\n}\n\nwindow.onload = function() {\n    const headerEl = document.querySelector(\".header\");\n    const dropdownEls = headerEl.querySelectorAll(\".dropdown\");\n    const burgerMenuEl = headerEl.querySelector(\".header__burger\");\n    const menuEl = headerEl.querySelector(\".header__nav\")\n\n    document.documentElement.style.setProperty('--scrollbar-width', `${window.innerWidth - document.documentElement.clientWidth}px`);        \n\n    Array.from(dropdownEls).forEach(dropdownEl => {\n        dropdownEl.addEventListener(\"click\", e => {\n            if (e.target.closest(\".dropdown__header\")) {\n                dropdownEl.classList.toggle(\"dropdown--open\")\n            }\n\n            if (e.target.closest(\".dropdown__list-item\")) {\n                let dropdownItemEl = e.target.closest(\".dropdown__list-item\")\n                let dropdownHeaderEl = e.currentTarget.querySelector(\".dropdown__header\")\n                dropdownHeaderEl.value = dropdownItemEl.dataset.value\n                dropdownHeaderEl.querySelector(\"span\").innerHTML = dropdownItemEl.querySelector(\"span\").innerHTML\n                e.currentTarget.querySelector(\".dropdown__list-item--selected\").classList.remove(\"dropdown__list-item--selected\")\n                dropdownItemEl.classList.add(\"dropdown__list-item--selected\")\n                dropdownEl.classList.remove(\"dropdown--open\")\n            }\n        })\n    })\n    \n    burgerMenuEl.addEventListener(\"click\", () => {\n        if (burgerMenuEl.classList.contains(\"header__burger--open\")) {\n            unlockBody()\n        } else {\n            lockBody()\n        }\n        \n        burgerMenuEl.classList.toggle(\"header__burger--open\")\n        menuEl.classList.toggle(\"header__nav--open\")\n    })\n\n    // hero section\n    const heroSection = document.querySelector(\".hero\")\n\n    initParallaxEffect(heroSection.querySelector(\".hero__container\"))\n\n    const tabEls = document.querySelectorAll(\".tab\");\n\n    function calcTabLinePosition(tabEl, activeButton = null) {\n        if (!activeButton) {\n            activeButton = tabEl.querySelector(\".tab__button--active\")\n        }\n        tabEl.querySelector(\".tab__line\").style.cssText = `\n            width: ${activeButton.offsetWidth}px;\n            transform: translate3D(${activeButton.getBoundingClientRect().x - tabEl.getBoundingClientRect().x}px, 0, 0)\n        `\n    }\n\n    Array.from(tabEls).forEach(tabEl => {\n        calcTabLinePosition(tabEl);\n        tabEl.addEventListener(\"click\", e => {\n            if (!e.target.closest(\".tab__button\"))  {\n                return\n            }\n\n            if (e.target.closest(\".tab__button--active\")) {\n                return\n            }\n\n            const currentButtonEl = e.target.closest(\".tab__button\");\n            const currentTabPage = currentButtonEl.dataset.num;\n\n            tabEl.querySelector(\".tab__button--active\").classList.remove(\"tab__button--active\")\n            currentButtonEl.classList.add(\"tab__button--active\")\n            \n            tabEl.querySelector(\".tab__page--active\").classList.remove(\"tab__page--active\")\n            tabEl.querySelector(\".tab__page--\" + currentTabPage).classList.add(\"tab__page--active\")\n            \n            calcTabLinePosition(tabEl,currentButtonEl)\n        })\n    })\n\n    window.addEventListener(\"resize\", () => {\n        Array.from(tabEls).forEach(tabEl => calcTabLinePosition(tabEl))\n    })\n\n    // video section\n    initParallaxEffect(document.querySelector(\".video-section__video\"))\n    // reviews section\n    initParallaxEffect(document.querySelector(\".reviews\"))\n    \n    const popupEl = document.querySelector(\".popup\");\n\n    popupEl.addEventListener(\"click\", e => {\n        if (e.target.closest(\".popup__close\") || !e.target.closest(\".popup__content\")) {\n            closePopup(popupEl);\n        }\n    })\n    document.querySelector(\".video-section__video\").addEventListener(\"click\", (e) => {\n        openPopup(popupEl)\n    })\n    \n    document.addEventListener(\"keydown\", (e) => {\n        if (e.which === 27) {\n            closePopup(popupEl)\n        }\n    })\n\n    new Swiper(\".reviews .swiper\", {\n        spaceBetween: 10,\n        slidesPerView: \"auto\",\n        freeMode: true,\n        slidesOffsetBefore: 10,\n        slidesOffsetAfter: 10,\n        breakpoints: {\n            576: {\n                spaceBetween: 20,\n            }\n        },\n        scrollbar: {\n            el: '.swiper-scrollbar',\n            draggable: true\n        },\n    })\n\n    // Header\n    // const headerEl = document.querySelector(\".header\");\n\n    // const callback = function(entries, observer) {\n    //     // элемент в видимой части экрана\n    //     // в данном случае это headerEl\n    //     if (entries[0].isIntersecting) {\n    //         headerEl.classList.remove(\"header_scroll\")\n    //     } else {\n    //         // элемент пропал с видимой части экрана\n    //         headerEl.classList.add(\"header_scroll\")\n    //     }\n    // }\n\n    // const headerObserver = new IntersectionObserver(callback)\n    // headerObserver.observe(headerEl)\n\n    document.querySelectorAll(\"input[name='phone']\").forEach(inputElement => {\n        inputElement.addEventListener(\"keypress\", (e) => {\n            const length = e.target.value.length;\n            if (e.charCode < 48 || e.charCode > 57 || length > 14) {\n                e.preventDefault();\n                return;\n            }\n    \n            switch (length) {\n                case 0: \n                    e.target.value = \"8 \" ;\n                    break;\n                case 5:\n                case 9:\n                case 12:\n                    e.target.value += \" \";\n                    break;\n                default:\n                    break;\n            }\n        })\n        inputElement.addEventListener(\"input\", e => {e.target.value.length === 2 && (e.target.value = \"\")})\n    })\n}\n"],"names":[],"sourceRoot":""}